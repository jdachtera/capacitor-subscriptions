{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface SubscriptionsPlugin {\n  /**\n   * A test method which just returns what is passed in\n   */\n  echo(options: { value: string }): Promise<{ value: string }>;\n\n  /**\n   * Receives a product ID and returns the product details\n   */\n  getProductDetails(options: { productIdentifier: string }): Promise<Product>;\n\n  /**\n   * Receives the product ID which the user wants to purchase and returns the transaction ID\n   */\n  purchaseProduct(options: { productIdentifier: string; appAccountToken?: string }): Promise<AppleTransaction>;\n  purchaseProduct(options: { productIdentifier: string; obfuscatedAccountId?: string }): Promise<GoogleTransaction>;\n  purchaseProduct(options: { productIdentifier: string }): Promise<Transaction>;\n\n  getCurrentEntitlements(): Promise<{ entitlements: Transaction[] }>;\n\n  getLatestTransaction(options: { productIdentifier: string }): Promise<Transaction>;\n\n  manageSubscriptions(): any;\n\n  acknowledgePurchase(options: { purchaseToken: string }): Promise<void>;\n\n  setGoogleVerificationDetails(options: { googleVerifyEndpoint: string; bid: string }): void;\n\n  addListener(\n    eventName: 'ANDROID-PURCHASE-SUCCESS',\n    listenerFunc: (response: GoogleTransaction) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  addListener(\n    eventName: 'ANDROID-PURCHASE-ERROR',\n    listenerFunc: () => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n}\n\n// Response data types\n\nexport interface Product {\n  productIdentifier: string;\n  price: string;\n  displayName: string;\n  description: string;\n}\n\nexport type BaseTransaction = {\n  productIdentifier: string;\n  expiryDate: string;\n  originalId: string;\n  transactionId: string;\n  originalStartDate: string;\n  isTrial?: boolean;\n};\n\nexport type AppleTransaction = BaseTransaction & {\n  appAccountToken: string;\n};\n\nexport type GoogleTransaction = BaseTransaction & {\n  isAcknowledged: boolean;\n  purchaseToken: string;\n  obfuscatedAccountId?: string;\n};\n\nexport type Transaction = AppleTransaction | GoogleTransaction;\n\nexport type AndroidPurchasedTrigger =\n  | { successful: true; data: GoogleTransaction }\n  | { successful: false; data: never };\n"]}